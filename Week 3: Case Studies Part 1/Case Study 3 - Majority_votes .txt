### Example of Majority Votes            
             
             
             if count == max_count:
            winners.append(vote)
     
    return random.choice(winners)

import scipy.stats as ss
def majority_vote_short(votes):
    """
    Return the most commoon element in votes

    """
    mode, count = ss.mstats.mode(votes)
    return mode

# Extrair respostas
votes=[1,2,3,1,2,3,3,3,3,3,3,3]
winner = majority_vote(votes)
winner


# loop over all points
    # compute the distance between point p and every other point
#sort distances and return those k points that are nearest to point p 

import numpy as np


def distance(p, points):
    points = np.array([[1,1],[1,2],[1,3],[2,1],[2,2],[2,3],[3,1],[3,2],[3,3]])
    p = np.array([2.5,2])

distances = np.zeros(points.shape[0])
for i in range(len(distances)):
  distances[i] = distance(p, points[i])
  


import matplotlib.pyplot as plt 
plt.plot(points[:,0], points[:,1],"ro")
plt.plot(p[0],p[1],"bo")
plt.axis([0.5,3.5,0.5,3.5])
